// Variáveis globais
Global Bool alarm_gate_val = False;
Global Bool prev_alarm_gate_val = False;
Global Bool alarm_gate_val2 = False;
Global Bool prev_alarm_gate_val2 = False;
Global Bool alarm_flag = False;
Global Bool alarm_flag2 = False;
// ***************************************************************************

Function void Main()
#Startup
    While(1)
        Time_RW();
        Call_Alarm();
        Sleep(100);
    end
end

// ***************************************************************************

Function void Time_RW()
    // Mete valores de Dia | Mês | Ano na gate Time 0
    SetStrGateValue("Time",0,GetDateString("-",true));

    // Mete valores de Hora | Minuto | Segundo na gate Time 1
    SetStrGateValue("Time",1,GetTimeString(" : "));
end

Function void Call_Alarm()
// Ve falling edge das máquinas, ativa gate com isso
// Gate depois é comparada com sensor de tapete de baixo (fora do código)
// Dá reset quando o alarme levantar um sinal Ack

    alarm_gate_val = Check_Bit("1",1,6); // Adquire estado da máquina 1 (ativa/não ativa)
    alarm_gate_val2 = Check_Bit("1",1,7); // Adquire estado da máquina 2 (ativa/não ativa)

    if(alarm_gate_val == False && prev_alarm_gate_val == True) Then
        SetDigGateValue("AlarmAux",0,1); // Mete a aux gate 0 a true
        alarm_flag = True;
    end
    if(alarm_gate_val2 == False && prev_alarm_gate_val2 == True) Then
        SetDigGateValue("AlarmAux",1,1); // Mete a aux gate 1 a true
        alarm_flag2 = True;
    end

    if(GetEvnGateAckedStatus("ConvAlarm",0) == True && alarm_flag == True) Then
        SetDigGateValue("AlarmAux",0,0); // Mete a aux gate 0 a false
        alarm_flag = False;
    end
    if(GetEvnGateAckedStatus("ConvAlarm",1) == True && alarm_flag2 == True) Then
        SetDigGateValue("AlarmAux",1,0); // Mete a aux gate 1 a false
        alarm_flag2 = False;
    end

    prev_alarm_gate_val = alarm_gate_val;
    prev_alarm_gate_val2 = alarm_gate_val2;
end

Function void Machine__Mode_Buttons(int MachNum, int ButNum)
    if(MachNum == 0) Then
        // Mete o valor da gate para a máquina MachNum relativa ao botão ButNum a 1
        SetNumGateValue("botoes_m1",1,pow(2,ButNum));
    else
        if(MachNum == 1) Then
            // Mete o valor da gate para a máquina MachNum relativa ao botão ButNum a 1
            SetNumGateValue("botoes_m2",1,pow(2,ButNum));
        else
            MessageBox("An error has ocurred in Machine_Mode_Buttons() | Wrong machine index (MachNum)", "Error!!!");
        end
    end
end

Function void Machine_Manual_Control(int MachNum, int ButNum)
    /*if(MachNum == 0) Then
        if(GetNumGateValue() == 1)
            if(ButNum == 0) Then
                //SetNumGateValue();
            else
                if(ButNum == 1) Then
                    //SetNumGateValue();
                else
                    if(ButNum == 2) Then
                        //SetNumGateValue();
                    else
                        if(ButNum == 3) Then
                            //SetNumGateValue();
                        else
                            if(ButNum == 4) Then
                                //  SetNumGateValue();
                            end
                        end
                    end
                end
            end
        end
    else
        if(MachNum == 1) Then
            if(GetNumGateValue() == 1)
                if(ButNum == 0) Then
                    //SetNumGateValue();
                else
                    if(ButNum == 1) Then
                        //SetNumGateValue();
                    else
                        if(ButNum == 2) Then
                            //SetNumGateValue();
                        else
                            if(ButNum == 3) Then
                                //SetNumGateValue();
                            else
                                if(ButNum == 4) Then
                                    //  SetNumGateValue();
                                end
                            end
                        end
                    end
                end
            end
        end
    end*/
end

Function void Machine_Maintenance_Control()
    // Desligar máquina
end

Function void Machine__Tool_Buttons(int MachNum, int ButNum)
    if(MachNum == 0) Then
        // Mete o valor da gate para a máquina MachNum relativa ao botão ButNum a 1
        SetNumGateValue("tool_m1",1,pow(2,ButNum));
    else
        if(MachNum == 1) Then
            // Mete o valor da gate para a máquina MachNum relativa ao botão ButNum a 1
            SetNumGateValue("tool_m2",1,pow(2,ButNum));
        else
            MessageBox("An error has ocurred in Machine_Tool_Buttons() | Wrong machine index (MachNum)", "Error!!!");
        end
    end
end

Function void Machine__Util_Buttons(int MachNum, int ButNum)
    if(MachNum == 0) Then
        // Mete o valor da gate para a máquina MachNum relativa ao botão ButNum a 1
        SetNumGateValue("tool_m1",1,pow(2,3+ButNum));
    else
        if(MachNum == 1) Then
            // Mete o valor da gate para a máquina MachNum relativa ao botão ButNum a 1
            SetNumGateValue("tool_m2",1,pow(2,3+ButNum));
        else
            MessageBox("An error has ocurred in Machine_Util_Buttons() | Wrong machine index (MachNum)", "Error!!!");
        end
    end
end

Function bool Check_Bit(String GateName, int GateID, int BitPos)
    if(BitAnd(GetNumGateValue(GateName,GateID),BitPos) == 0) Then
        return False;
    else
        return True;
    end
End

/*
NOTA: Mudar func de modo para ter só uma linha :)
      Mudar func de modo manual para as ferramentas terem só uma var
      Ver se a func de maintenance mode faz algo
*/
