// Variáveis globais
Global Bool alarm_gate_val = False;
Global Bool prev_alarm_gate_val = False;
Global Bool alarm_gate_val2 = False;
Global Bool prev_alarm_gate_val2 = False;
Global Bool alarm_flag = False;
Global Bool alarm_flag2 = False;
Global Unsigned Alarm_Timer = 0;
Global Unsigned Alarm_Timer2 = 0;
// ***************************************************************************

Function void Main()
#Startup
    While(1)
        Time_RW();
        Call_Alarm();
        Sleep(100);
    end
end

// ***************************************************************************

Function void Time_RW()
    // Mete valores de Dia | Mês | Ano na gate Time 0
    SetStrGateValue("Time",0,GetDateString("-",true));

    // Mete valores de Hora | Minuto | Segundo na gate Time 1
    SetStrGateValue("Time",1,GetTimeString(" : "));
end

Function void Call_Alarm()
// Ve falling edge das máquinas, ativa gate com isso
// Gate depois é comparada com sensor de tapete de baixo (fora do código)
// Dá reset quando o alarme levantar um sinal Ack

    alarm_gate_val = Check_Bit("1",1,6); // Adquire estado da máquina 1 (ativa/não ativa)
    alarm_gate_val2 = Check_Bit("1",1,7); // Adquire estado da máquina 2 (ativa/não ativa)

    if(alarm_gate_val == False && prev_alarm_gate_val == True) Then
        alarm_flag = True;
    end
    if(alarm_gate_val2 == False && prev_alarm_gate_val2 == True) Then
        alarm_flag2 = True;
    end

    if(alarm_flag == False) Then
        Alarm_Timer = GetActualSeconds();
    end
    if(alarm_flag2 == False) Then
        Alarm_Timer2 = GetActualSeconds();
    end

    if((GetActualSeconds() - Alarm_Timer > 10) && (Check_Bit("1",2,1))) Then
        SetDigGateValue("AlarmAux",0,1);
    end
    if((GetActualSeconds() - Alarm_Timer2 > 10) && (Check_Bit("1",2,3))) Then
        SetDigGateValue("AlarmAux",1,1);
    end

    if(Check_Bit("1",1,1) == False) Then
        SetDigGateValue("AlarmAux",0,0);
        SetEvnGateAckedStatus("ConvAlarm",0);
        alarm_flag = False;
    end
    if (Check_Bit("1",1,3) == False) Then
        SetDigGateValue("AlarmAux",1,0);
        SetEvnGateAckedStatus("ConvAlarm",1);
        alarm_flag2 = False;
    end

    prev_alarm_gate_val = alarm_gate_val;
    prev_alarm_gate_val2 = alarm_gate_val2;
end

Function bool Check_Bit(String GateName, int GateID, int BitPos)
    if(BitAnd(GetNumGateValue(GateName,GateID),pow(2,BitPos)) == 0) Then
        return False;
    else
        return True;
    end
End

//------------------------------------------------------Rui-------------

Function Void Toggle_aut1()
  SetNumGateValue("botoes_m1",1,1);
End


Function Void Toggle_man1()
  SetNumGateValue("botoes_m1",1,2);
End

Function Void Toggle_meint1()
  SetNumGateValue("botoes_m1",1,4);
End

//-------------------------------------------------------------M2------------------------------------------//


Function Void Toggle_aut2()
  SetNumGateValue("botoes_m2",1,1);
End


Function Void Toggle_man2()
  SetNumGateValue("botoes_m2",1,2);
End

Function Void Toggle_meint2()
  SetNumGateValue("botoes_m2",1,4);
End




Function Void Toggle_tool1_m1()
  SetNumGateValue("tool_m1",1,1);
End
Function Void Toggle_tool2_m1()
  SetNumGateValue("tool_m1",1,2);
End
Function Void Toggle_tool3_m1()
  SetNumGateValue("tool_m1",1,4);
End

Function Void Toggle_operar_m1()
  int current_state;
  current_state = GetNumGateValue("op_tapete_m1",1);
  current_state = BitXor(current_state, 1);
  SetNumGateValue("op_tapete_m1",1,current_state);
End

Function Void Toggle_tapete_m1()
  int current_state;
  current_state = GetNumGateValue("op_tapete_m1",1);
  current_state = BitXor(current_state, 2);
  SetNumGateValue("op_tapete_m1",1,current_state);
End



Function Void Toggle_tool1_m2()
  SetNumGateValue("tool_m2",1,1);
End
Function Void Toggle_tool2_m2()
  SetNumGateValue("tool_m2",1,2);
End
Function Void Toggle_tool3_m2()
  SetNumGateValue("tool_m2",1,4);
End
Function Void Toggle_operar_m2()
  int current_state;
  current_state = GetNumGateValue("op_tapete_m2",1);
  current_state = BitXor(current_state, 1);
  SetNumGateValue("op_tapete_m2",1,current_state);
End
Function Void Toggle_tapete_m2()
  int current_state;
  current_state = GetNumGateValue("op_tapete_m2",1);
  current_state = BitXor(current_state, 2);
  SetNumGateValue("op_tapete_m2",1,current_state);
End
